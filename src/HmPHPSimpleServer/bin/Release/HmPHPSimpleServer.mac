/*
 * HmPHPSimpleServer v1.3.0.8
 *
 * Copyright (c) 2023-2025 Akitsugu Komiyama
 * under the MIT License
 */
 
hidemaruversion "9.22.14";


setcompatiblemode 0x08000000; // マクロ内変数を他と共用しない。


SET_PHP_SERVER_SETTINGS_INFO:

    $PHP_FULLPATH = @"C:\usr\php\php.exe"; // 手元にある php.exe へのフルパスを指定。
                                           // PCに入っていなければ、「https://windows.php.net/download」の「Zip」とあるものならどれでもOK (少々古いPHPでも問題はない)

    #NOTIFY_FILE_WATCHER = 1;              // ファイル更新等のファイル監視による自動更新を有効にする。

    $NOTIFY_FOLDER_CHANGE_FILTER = "\.php|\.html|\.htm|\.css|\.js|\.png|\.jpg|\.jpeg";
                                           // 編集しているファイルのみならず、httpのドキュメントルートフォルダ以下(サブフォルダ含む)の
                                           // 「指定のファイル郡が変更・追加された時、自動的にリロード」するかを決める。
                                           // .phpが実行されると新しくファイルを書き換えるような実装では、無限リロードになりかねないので扱いに注意すること。

    $PHP_DOCUMENTROOT = getarg(0);         // PHPサーバーのドキュメントルート。空白なら「秀丸で開いているファイルのフォルダー」がドキュメントルート。
                                           // 通常はこのまま空白でOK。このマクロに対して引数として渡すことが出来る。
                                           // 「execmacroで引数付き」やブックマークの「mac:"****\\HmPHPSimpleServer.mac" "C:\test"」といったように使用することが出来る。



SET_PHP_SERVER_READONLY_INFO:

    $PHP_HOSTNAME = @"localhost";          // 原則的には「localhost」。localhost(127.0.0.1)であれば、秀丸のURLからjavascript:(～)が実行可能です。

    #TARGET_BROWSER_PANE = 2;              // 個別ブラウザ枠:2  共用ブラウザ枠:1   ※原則的には個別ブラウザ枠。

    #BGN_PORT = 7201;                      // サーバー用に利用する 最低のポート番号。下の番号と合わせて編集しても良いが、原則編集する必要はないハズ。
    #END_PORT = 7400;                      // サーバー用に利用する 最大のポート番号。上の番号と合わせて編集しても良いが、原則編集する必要はないハズ。



RELEASE_OLD_PHP_SERVER_OBJECT:

    // 「この秀丸プロセス」内でのオブジェクト番号を取り出す
    $LAST_PHP_SERVER_COM = getstaticvariable("HmPHPSimpleServerLastObj", 2);

    // 有効な値があるならば...
    if ($LAST_PHP_SERVER_COM != "") {
        #LAST_PHP_SERVER_COM = val($LAST_PHP_SERVER_COM); // 文字列の数字 ⇒ 数値へ

        // 該当の値をToStringして本当に「HmPHPSimpleServer」のオブジェクトか確認する。
        // .NET で制作しているものはすべてのオブジェクトがToStringを持つ、それは「名前空間.クラス名」なのでこのような判定が出来る。
        $OBJ_CLASS_NAME = member(#LAST_PHP_SERVER_COM, "ToString");
        if ($OBJ_CLASS_NAME == "HmPHPSimpleServer.HmPHPSimpleServer") {
            releaseobject(#LAST_PHP_SERVER_COM); // HmPHPSimpleServer.HmPHPSimpleServer 内の「OnReleaseObject」も実行される。
        }
    }



EXIT_IF_FILENAME_IS_EMPTY:

    // 無題なら何もしない。マクロの一番先頭ではなく、この位置にある理由は、
    // 「１つ前に使っていたPHPサーバーオブジェクトの破棄」はしておきたいため、
    if (filename2 == "") {
        endmacro;
    }



CREATE_PHP_SERVER_OBJECT:

    // PHPサーバー関連オブジェクトの生成。秀丸のファイル名変更や、ファイル保存による更新、PHPサーバーのプロセスオブジェクトを管理する。
    #PHP_SERVER_COM = createobject( currentmacrodirectory + @"\HmPHPSimpleServer.dll", "HmPHPSimpleServer.HmPHPSimpleServer");

    // 「この秀丸プロセス」内でのオブジェクト番号を記憶しておく
    setstaticvariable "HmPHPSimpleServerLastObj", str(#PHP_SERVER_COM), 2; // 

    // マクロが終了してもオブジェクトは維持。シングルトンにするため、マクロの「CLEAR_OLD_PHP_SERVER_OBJECT:」で古い起動は掃除している。
    keepobject #PHP_SERVER_COM, 1;

    // 掃除される際(releaseobjectやプロセスを閉じた、何か秀丸レベルで致命的マクロエラーとなった際)に呼び出される
    setcomdetachmethod #PHP_SERVER_COM, "OnReleaseObject";



FIND_PHP_SERVER_AVILABLE_PORT:

    // 全秀丸共有で#PHP_HOSTPORTを持つ。１つずつインクリメントで「全秀丸プロセス」でユニークとし、まずは被りにくいようにする
    $STR_PORT = getstaticvariable("HmPHPSimpleServerLastPort", 1);

    // 初回起動時は、#BGN_PORT を「かぶりにくい番号」とする。
    if ($STR_PORT == "") {

        #PHP_HOSTPORT = #BGN_PORT;

    // 最後に起動した際のポート番号に1足したものを「被りにくい番号」とする。
    } else {
        #PHP_HOSTPORT = val($STR_PORT);

        // 予め１ずつずらしているのは、「本当に使われていない」という判定はどうあってもOSに訪ねたとしても完璧にはならないため、
        // 最低１ずつずらしていくことで、次に行う「本当に使われていないPort番号」の探索が「万が一」誤っていたとしても、Port番号が変わることにより問題なく動作する可能性が十分あるため。
        #PHP_HOSTPORT = #PHP_HOSTPORT + 1;

        // 指定のPort範囲外に溢れていたら、一番小さなPortから
        if (#PHP_HOSTPORT < #BGN_PORT || #END_PORT-20 < #PHP_HOSTPORT) {
            #PHP_HOSTPORT = #BGN_PORT;
        }
    }

    // 「本当に使われていないPort番号」を探すためのコンポーネント
    #PORT_CHECKER_COM = createobject( currentmacrodirectory + @"\HmPHPSimpleServer.dll", "HmPHPSimpleServer.HmUsedPortChecker");

    // 「被りにくい番号」～「ポート番号最終番」の範囲で空いているポートを探し、一番若い番号を取得
    #PHP_HOSTPORT = member(#PORT_CHECKER_COM, "GetAvailablePort", #PHP_HOSTPORT, #END_PORT); // 

    releaseobject(#PORT_CHECKER_COM);

    if (#PHP_HOSTPORT == 0) {
        message("ポート番号に空きがありません。\n#BGN_PORT と #END_PORT の範囲を広げて下さい。");
        endmacro;
    }

    setstaticvariable "HmPHPSimpleServerLastPort", str(#PHP_HOSTPORT), 1;


LAUNCH_PHP_SERVER:

    // 各種情報を基に、PHPを簡易サーバーとして起動
    $RELATIVE_URI = member(#PHP_SERVER_COM, "Launch", $PHP_FULLPATH, $PHP_HOSTNAME, #PHP_HOSTPORT, $PHP_DOCUMENTROOT);



SHOW_HTTP_URL_IN_BROWSER_PANE:

    // ブラウザ枠で表示
    showbrowserpane 1, #TARGET_BROWSER_PANE;
    // 対応するポートでPHPサーバーが立っているので、そのURLをブラウザ枠に表示。
    setbrowserpaneurl sprintf("http://%s:%d/%s", $PHP_HOSTNAME, #PHP_HOSTPORT, $RELATIVE_URI), #TARGET_BROWSER_PANE;

